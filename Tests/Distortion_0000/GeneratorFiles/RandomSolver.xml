<?xml version="1.0" ?>

<class terminator="true">

<namespace>NVL_App</namespace>
<solution>DFinderLib</solution>
<name>RandomSolver</name>
<description>Defines a solver that uses a type of random search to find distortion parameters</description>

<includes>
    <include name="iostream" namespace="std" local="false" />
    <include name="opencv2/opencv.hpp" namespace="cv" local="false" />
    <include name="Distortion.h" local="false" />
    <include name="Grid" local="false" />
</includes>

<variables>
    <variable type="Distortion *" name="distortion" code="10" />
    <variable type="Grid *" name="grid" code="10" />
    <variable type="double" name="bestScore" code="10" />
    <variable type="Mat" name="dparams" code="10" />
</variables>

<constructors>

    <constructor type="custom" inline="false">
        <parameter type="const Size&" name="imageSize" description="The size of the image that we are dealing" />
        <parameter type="Grid *" name="grid" description="The grid parameters that we measured" />
        <parameter type="Mat&" name="dparams" description="The list of parameters that we a dealing with" />
    </constructor>

</constructors>

<methods>

    <!-- Solve -->
    <method section="Solver" access="public" return="double" name="Solve" description="Attempt to iterate and find solution" inline="false">
        <parameter type="int" name="maxIterators" description="The maximum number of iterations to try" />
    </method>   

</methods>

<tests>
    <test name="solution_test" description="Test the solver operation" exception="false" />
</tests> 

</class>